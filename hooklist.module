<?php

/**
 * @file
 * A module showing list of commonly used hook in Drupal Development.
 * 
 * This module provides a block that lists all of the commonly used hook 
 * in Drupal Development.
 */

/**
 * Implements hook_help().
 */
function hooklist_help($path, $arg) {
  if ($path == 'admin/help#hooklist') {
    return t('Lists commonly used hooks in Drupal Development.');
  }
}

/**
 * Implements hook_block_info().
 */
function hooklist_block_info() {
  $blocks = array();
    
  $blocks['list_hooks'] = array(
    'info' => t('A listing of all of the commonly used hooks in Drupal Development.'),
    'cache' => DRUPAL_NO_CACHE,
  );
  
  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function hooklist_block_view($block_name = '') {
  module_load_include('inc', 'hooklist', 'hooklist');
  
  $items = get_hooklist_items();
  
  // Create an empty block
  $block = array(
    'subject' => '',
    'content' => '',
  );
  
  switch ($block_name) {
    case 'list_hooks':
      // Set the block title.
      $block['subject'] = t('List of commonly used hooks');
      
      // Theme the list of hooks.
      $block['content']['list'] = array(
        '#theme' => 'item_list__hooklist',
        '#items' => $items,
        '#pre_render' => array('hooklist_item_list_child_render'),
      );
      
      // Add a CSS file to style the block.
      $block['content']['#attached']['css'][] = 
        drupal_get_path('module', 'hooklist') . '/hooklist.css';
      
      // Add a JS file to toggle sample code.
      $block['content']['#attached']['js'][] = 
        drupal_get_path('module', 'hooklist') . '/hooklist.js';
  }
  
  return $block;
}

/**
 * Render the child elements of theme_item_list() before its data is themed.
 */
function hooklist_item_list_child_render($elements) {
  foreach (array_keys($elements['#items']) AS $key) {
    
    // Take the renderable array that we set in hooklist_block_view() and
    // render it into the string that theme_item_list() expects.
    if (is_array($elements['#items'][$key]['data'])) {
      $elements['#items'][$key]['data'] = drupal_render($elements['#items'][$key]['data']);
    }
  }
  return $elements;
}

/**
 * Implements hook_theme().
 */
function hooklist_theme($existing, $type, $theme, $path) {
  $themes = array(
    'hooklist_block_item' => array(
      'variables' => array(
        'hook_name' => '',
        'url' => '',
        'description' => '',
        'category' => '',
        'tags_array' => array(),
        'sample_code' => '',
      ),
      'template' => 'hooklist-block-item',
    ),
    'hooklist_tags' => array(
      'render element' => 'element',      
    ),
  );
  
  return $themes;
}

/**
 * Preprocesses hooklist block item variables
 */
function template_preprocess_hooklist_block_item(&$variables) {
  
  // Create a renderable array for the link
  $variables['link'] = array(
    '#type' => 'link',
    '#title' => $variables['hook_name'],
    '#href' => $variables['url'],
    '#options' => array(
      'attributes' => array(
        'target' => '_blank',
      ),
    ),
  );
  
  // Create a renderable array for the tags
  $items = array();
  foreach ($variables['tags_array'] as $tag) {
    $items[] = array(
      'data' => $tag,
      'class' => array(
        'tag', 
        'tag-' . str_replace(' ', '-', strtolower($tag))
      ),
    );
  }
  
  $variables['tags'] = array(
    '#theme' => 'item_list', 
    '#items' => $items,
  ); 
}